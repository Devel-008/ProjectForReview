package com.review;

import org.slf4j.Logger;

import java.sql.*;
import java.util.Scanner;


public class UpdateInStudentRecords {
    PreparedStatement pStatement;
    ResultSet rs;
    Statement stmt;
    int row;

    public void updateRecords(Connection connection, Logger logger, StudentGetterSetter student, Scanner sc){
        logger.info("Press 1 to update Student's Name || Press 2 to update Student's Personal Data || Press 3 to update Student's Marks ");
        int choice = sc.nextInt();
        logger.info("Enter the ID of student whose name you want Update :=");
        student.setStudentId(sc.nextInt());
        if(choice == 1){
            updateStudentName(connection,logger,student,sc);
        }else if (choice == 2){
            updateStudentDetails(connection,logger,student,sc);
        }else if (choice == 3){
            updateStudentMarks(connection,logger,student,sc);
        }
    }

    private void updateStudentName(Connection connection, Logger logger, StudentGetterSetter student, Scanner sc) {

        String select = " select id from student";
        String choice;

        try {
            pStatement = connection.prepareStatement(select);
            rs = pStatement.executeQuery();

            while(rs.next()) {
                if (student.getStudentId() == rs.getInt("id")) {
                    logger.info("Press 1 to update StudentName || Press 2 to update LastName ");
                    int i = sc.nextInt();
                    String query;

                    if(i==1){
                        choice = "Name";
                        query = "update student set studentName = ? where id = ?";
                        logger.info("Update " + choice + ":=");
                        student.setStudentName(sc.next());
                        try {
                            pStatement = connection.prepareStatement(query);
                            pStatement.setString(1,student.getStudentName());
                        }catch (Exception e){
                            logger.error("Error at line 52 in update : "+e);
                        }
                        if (!student.getStudentName().matches("[A-Za-z]*")) {
                            logger.warn("Incorrect format");
                        }
                    }else if(i==2){
                        choice = "LastName";
                        query = "update student set lastName = ? where id = ?";
                        logger.info("Update " + choice + ":=");
                        try {
                            pStatement = connection.prepareStatement(query);
                            pStatement.setString(1, student.getStudentLastName());
                        }catch (Exception e){
                            logger.error("Error at line 65 in update : "+e);
                        }
                        if (!student.getStudentLastName().matches("[A-Za-z]*")) {
                            logger.warn("Incorrect format");
                        }
                    }else {
                        logger.warn("Incorrect Choice");
                    }
                    try{
                        pStatement.setInt(2, student.getStudentId());
                        row = pStatement.executeUpdate();
                        if (row > 0) {
                            logger.info("Record Updated");
                        } else {
                            logger.warn("Record not Updated");
                        }
                    } catch (Exception e) {
                        logger.error(String.valueOf(e));
                    }
                }
            }
        }catch (Exception e){
            logger.error(String.valueOf(e));
        }
        }
        private void updateStudentDetails(Connection connection, Logger logger, StudentGetterSetter student, Scanner sc) {

            String select = "select * from studentPersonalDetails";
            String name = " ";
            String choice;
            try {
                stmt = connection.createStatement();
                rs = stmt.executeQuery(select);
                while(rs.next()) {
                    if (student.getStudentId() == rs.getInt("studentId"))
                    {
                        logger.info("Press 1 to update FatherName || Press 2 to update MotherName || Press 3 to update Address || Press 4 to update DOB ");
                        int i = sc.nextInt();
                        String query = "";
                        if (i == 1) {
                            query = "update studentPersonalDetails set fatherName = ? where studentId = ?";
                            choice = "Father-Name";
                            logger.info("Update " + choice + ":=");
                            name = sc.next();
                            if (!name.matches("[A-Za-z]*")) {
                                logger.warn("Incorrect format");
                            }
                        } else if (i == 2) {
                            query = "update studentPersonalDetails set motherName = ? where studentId = ?";
                            choice = "Mother-Name";
                            logger.info("Update " + choice + ":=");
                            name = sc.next();
                            if (!name.matches("[A-Za-z]*")) {
                                logger.warn("Incorrect format");
                            }
                        } else if (i == 3) {
                            query = "update studentPersonalDetails set address = ? where studentId = ?";
                            choice = "Address";
                            logger.info("Update " + choice + ":=");
                            name = sc.next();
                            if (!name.matches("[A-Za-z][A-Za-z0-9]*")) {
                                logger.warn("Incorrect format");
                            }
                        } else if (i == 4) {
                            query = "update studentPersonalDetails set dob = ? where studentId = ?";
                            choice = "DOB";
                            logger.info("Update " + choice + "yyyy-mm-dd:= (Example: 2000-10-10 )");
                            name = sc.next();
                            if (!name.matches("[1-2][0-9][0-9][0-9][-][0-1][0-9][-][0-3][0-9]")) {
                                logger.warn("Incorrect format");
                            }
                        } else {
                            logger.warn("Wrong Choice");
                        }

                        pStatement = connection.prepareStatement(query);
                        pStatement.setString(1, name);
                        pStatement.setInt(2, student.getStudentId());
                        int row = pStatement.executeUpdate();
                        if (row > 0) {
                            logger.info("Updated");
                        } else {
                            logger.warn("Data Not Updated");
                        }
                    }
                }
            }catch (Exception e){
                logger.error(String.valueOf(e));
            }
        }
        private void updateStudentMarks(Connection connection, Logger logger, StudentGetterSetter student, Scanner sc){

            String select = "select * from studentMarks";
            String query = "";
            float name = 0;
            String choice;
            try {
                stmt = connection.createStatement();
                rs = stmt.executeQuery(select);
                while(rs.next()) {
                    if (student.getStudentId() == rs.getInt("studentId"))
                    {
                        logger.info("Press 1 to update English || Press 2 to update Hindi || Press 3 to update Maths || Press 4 to update Science || Press 5 to update Social:= ");
                        int i = sc.nextInt();
                        if (i == 1) {
                            query = "update studentMarks set english = ? where studentId = ?";
                            choice = "English";
                            logger.info("Update " + choice + " marks:=");
                            name = sc.nextFloat();
                            if (name > 100) {
                                logger.warn("Marks entered must be more than 100");
                            }
                        }
                        else if (i == 2) {
                             choice = "Hindi";
                            logger.info("Update " + choice + " marks:=");
                            name = sc.nextFloat();
                            if (name > 100) {
                                logger.warn("Marks entered must be more than 100");
                            }
                        } else if (i == 3) {
                             choice = "Maths";
                            logger.info("Update " + choice + " marks:=");
                            name = sc.nextFloat();
                            if (name > 100) {
                                logger.warn("Marks entered must be more than 100");
                            }
                        } else if (i == 4) {
                             choice = "Science";
                            logger.info("Update " + choice + " marks:=");
                            name = sc.nextFloat();
                            if (name > 100) {
                                logger.warn("Marks entered must be more than 100");
                            }
                        } else if (i == 5) {
                             choice = "Social";
                            logger.info("Update " + choice + " marks:=");
                            name = sc.nextFloat();
                            if (name > 100) {
                                logger.warn("Marks entered must be more than 100");
                            }
                        }
                        pStatement = connection.prepareStatement(query);
                        pStatement.setFloat(1, name);
                        pStatement.setInt(2, student.getStudentId());
                        updatePercentage(connection, student.getStudentId(), logger, student);
                        int row = pStatement.executeUpdate();
                        if (row > 0) {
                            logger.info("Updated");
                        } else {
                            logger.warn("Data Not Updated");
                        }
                    }
                }
            }catch (Exception e){
                logger.error(String.valueOf(e));
            }
        }
    private void updatePercentage(Connection connection, int id, Logger logger, StudentGetterSetter student ) {

            String select = "select english,hindi, science, maths, social from studentMarks where studentId = " + id;
                        try {
                        stmt = connection.createStatement();
                        rs = stmt.executeQuery(select);
                        rs.next();
                        student.setEnglish(rs.getFloat("english"));
                        student.setHindi(rs.getFloat("hindi"));
                        student.setMaths(rs.getFloat("maths"));
                        student.setScience(rs.getFloat("science"));
                        student.setSocial(rs.getFloat("social"));
                        float total = student.getEnglish() + student.getHindi() + student.getMaths() + student.getScience() + student.getSocial();
                        float percent = (total * 100) / 500;

                        String query = "update student set percentage = ? where rollno = ?";
                        pStatement = connection.prepareStatement(query);
                        pStatement.setInt(2, id);
                        pStatement.setFloat(1, percent);
                        pStatement.executeUpdate();
                        logger.info("Percentage Updated!!!");
                    } catch (Exception e) {
                        logger.info(String.valueOf(e));
                    }
        try {
            stmt.close();
            rs.close();
            pStatement.close();
        } catch (SQLException e) {
           logger.info(String.valueOf(e));
        }
    }
}
